name: Flutter Test

on:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: ""
      format_directories:
        required: false
        type: string
        default: "lib test"
      format_line_length:
        required: false
        type: string
        default: "80"
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      working_directory:
        required: false
        type: string
        default: "."
    secrets:
      dot_env:
        required: false

jobs:
  deveji-flutter-test:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4.1.6

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 📝 Add .env file
        run: echo "${{ secrets.dot_env }}" > .env

      - name: 📦 Install Dependencies
        run: |
          flutter clean
          dart run build_runner build -d
          flutter pub get

      - name: ✨ Check Formatting
        run: |
          dart format --line-length ${{inputs.format_line_length}} --set-exit-if-changed ${{inputs.format_directories}}
          check=$?
          echo "CHECK_FORMAT=($check)" >> $GITHUB_ENV
          return $check
          
        continue-on-error: true

      - name: 🕵️ Analyze
        run: |
          flutter analyze ${{inputs.analyze_directories}}
          check=$?
          echo "CHECK_ANALYZE=($check)" >> $GITHUB_ENV
          return $check
        continue-on-error: true

      - name: 🧪 Run Tests
        run: | 
          flutter test --test-randomize-ordering-seed random
          check=$?
          echo "CHECK_TEST=($check)" >> $GITHUB_ENV
          return $check
      
      - name: 🚀 Results
        run: |
          IF [ $CHECK_FORMAT -ne 0 ]; THEN
            echo "### ❌ Formatting check failed!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          IF [ $CHECK_ANALYZE -ne 0 ]; THEN
            echo "### ❌ Analyze check failed!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          IF [ $CHECK_TEST -ne 0 ]; THEN
            echo "### ❌ Test check failed!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          IF [ $CHECK_FORMAT -eq 0 ] && [ $CHECK_ANALYZE -eq 0 ] && [ $CHECK_TEST -eq 0 ]; THEN
            echo "### ✅ All checks passed!" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true
          

